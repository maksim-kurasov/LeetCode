cmake_minimum_required(VERSION 3.23)
project(LeetCode)

set(CMAKE_CXX_STANDARD 23)

add_executable(LeetCode 0217-contains-duplicate.cpp 0242-valid-anagram.cpp 0001-two-sum.cpp 0049-group-anagrams.cpp 0347-top-k-frequent-elements.cpp 0015-3sum.cpp 0238-product-of-array-except-self.cpp 0042-trapping-rain-water.cpp 0036-valid-sudoku.cpp 0128-longest-consecutive-sequence.cpp 0020-valid-parentheses.cpp 0155-min-stack.cpp 0150-evaluate-reverse-polish-notation.cpp 0022-generate-parentheses.cpp 0739-daily-temperatures.cpp 0853-car-fleet.cpp 0084-largest-rectangle-in-histogram.cpp 0125-valid-palindrome.cpp 0167-two-sum-II-input-array-is-sorted.cpp 0011-container-with-most-water.cpp 0121-best-time-to-buy-and-sell-stock.cpp 0003-longest-substring-without-repeating-characters.cpp "0424-longest-repeating-character-replacement .cpp" 0567-permutation-in-string.cpp 0076-minimum-window-substring.cpp 0239-sliding-window-maximum.cpp 0704-binary-search.cpp 0074-search-a-2d-matrix.cpp 0875-koko-eating-bananas.cpp 0153-find-minimum-in-rotated-sorted-array.cpp 0033-search-in-rotated-array.cpp 0981-time-based-key-value-store.cpp 0004-median-of-two-sorted-arrays.cpp 0206-reverse-linked-list.cpp 0021-merge-two-sorted-lists.cpp 0143-reorder-list.cpp 0019-remove-nth-node-from-end-of-list.cpp 0138-copy-list-with-random-pointer.cpp 0002-add-two-numbers.cpp 0141-linked-list-cycle.cpp 0287-find-the-duplicate-number.cpp 0146-lru-cache.cpp 0023-merge-k-sorted-lists.cpp 0025-reverse-nodes-in-k-group.cpp 0226-invert-binary-tree.cpp 0104-maximum-depth-of-binary-tree.cpp 0543-diameter-of-binary-tree.cpp 0110-balanced-binary-tree.cpp 0100-same-tree.cpp 0572-subtree-of-another-tree.cpp 0235-lowest-common-ancestor-of-a-binary-search-tree.cpp 0102-binary-tree-level-order-traversal.cpp 0199-binary-tree-right-side-view.cpp 1448-count-good-nodes-in-binary-tree.cpp 0098-validate-binary-search-tree.cpp 0230-kth-smallest-element-in-a-bst.cpp 0105-construct-binary-tree-from-preorder-and-inorder-traversal.cpp 0124-binary-tree-maximum-path-sum.cpp 0297-serialize-and-deserialize-binary-tree.cpp "0208-implement-trie-(prefix-tree).cpp" 0211-design-add-and-search-words-data-structure.cpp 0212-word-search-II.cpp 0078-subsets.cpp 0039-combination-sum.cpp 0046-permutations.cpp 0090-subsets-II.cpp 0040-combination-sum-II.cpp 0079-word-search.cpp 0131-palindrome-partitioning.cpp 0017-letter-combinations-of-a-phone-number.cpp 0051-n-queens.cpp 0703-kth-largest-element-in-a-stream.cpp 1046-last-stone-weight.cpp 0973-k-closest-points-to-origin.cpp 0560-subarray-sum-equals-k.cpp 0215-kth-largest-element-in-the-array.cpp 0300-longest-increasing-subsequence.cpp 0621-task-scheduler.cpp 0355-design-twitter.cpp 0295-find-median-from-data-stream.cpp 0200-number-of-islands.cpp 0133-clone-graph.cpp 0417-pacific-atlantic-water-flow.cpp 0130-surrounded-regions.cpp 0695-max-area-of-island.cpp 0994-rotting-oranges.cpp 0286-islands-and-treasure.cpp 0018-4sum.cpp 1652-defuse-the-bomb.cpp)
